// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,t=Object.prototype,n=t.toString,o=t.__defineGetter__,a=t.__defineSetter__,i=t.__lookupGetter__,u=t.__lookupSetter__;var f=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?e:function(r,e,f){var l,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof f||null===f||"[object Array]"===n.call(f))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+f+"`.");if((c="value"in f)&&(i.call(r,e)||u.call(r,e)?(l=r.__proto__,r.__proto__=t,delete r[e],r[e]=f.value,r.__proto__=l):r[e]=f.value),_="get"in f,p="set"in f,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(r,e,f.get),p&&a&&a.call(r,e,f.set),r};function l(r,e,t){f(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})}function c(r,e,t){var n,o,a,i;if(a=0,r<=0)return a;if(1===r||0===t)return e[0];if(1===t){if((o=r%6)>0)for(i=0;i<o;i++)a+=e[i];if(r<6)return a;for(i=o;i<r;i+=6)a+=e[i]+e[i+1]+e[i+2]+e[i+3]+e[i+4]+e[i+5];return a}for(n=t<0?(1-r)*t:0,i=0;i<r;i++)a+=e[n],n+=t;return a}function _(r,e,t,n){var o,a,i,u;if(i=0,r<=0)return i;if(1===r||0===t)return e[n];if(o=n,1===t){if((a=r%6)>0)for(u=0;u<a;u++)i+=e[o],o+=t;if(r<6)return i;for(u=a;u<r;u+=6)i+=e[o]+e[o+1]+e[o+2]+e[o+3]+e[o+4]+e[o+5],o+=6;return i}for(u=0;u<r;u++)i+=e[o],o+=t;return i}function p(r,e,t){return r<=0?NaN:1===r||0===t?e[0]:c(r,e,t)/r}l(c,"ndarray",_),l(p,"ndarray",(function(r,e,t,n){return r<=0?NaN:1===r||0===t?e[n]:_(r,e,t,n)/r}));const{ndarray:y}=p;export{p as default,y as ndarray};
//# sourceMappingURL=mod.js.map
