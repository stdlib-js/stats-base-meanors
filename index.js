// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,a=n.__defineSetter__,u=n.__lookupGetter__,f=n.__lookupSetter__,l=t,c=function(e,r,t){var l,c,_,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(e,r)||f.call(e,r)?(l=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=l):e[r]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&i&&i.call(e,r,t.get),p&&a&&a.call(e,r,t.set),e},_=r()?l:c,p=function(e,r,t){_(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})},d=function(e,r,t){var n,o,i,a;if(i=0,e<=0)return i;if(1===e||0===t)return r[0];if(1===t){if((o=e%6)>0)for(a=0;a<o;a++)i+=r[a];if(e<6)return i;for(a=o;a<e;a+=6)i+=r[a]+r[a+1]+r[a+2]+r[a+3]+r[a+4]+r[a+5];return i}for(n=t<0?(1-e)*t:0,a=0;a<e;a++)i+=r[n],n+=t;return i};p(d,"ndarray",(function(e,r,t,n){var o,i,a,u;if(a=0,e<=0)return a;if(1===e||0===t)return r[n];if(o=n,1===t){if((i=e%6)>0)for(u=0;u<i;u++)a+=r[o],o+=t;if(e<6)return a;for(u=i;u<e;u+=6)a+=r[o]+r[o+1]+r[o+2]+r[o+3]+r[o+4]+r[o+5],o+=6;return a}for(u=0;u<e;u++)a+=r[o],o+=t;return a}));var y=d;function b(e,r,t){return e<=0?NaN:1===e||0===t?r[0]:y(e,r,t)/e}return p(b,"ndarray",(function(e,r,t,n){return e<=0?NaN:1===e||0===t?r[n]:y.ndarray(e,r,t,n)/e})),b},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).meanors=r();
//# sourceMappingURL=index.js.map
